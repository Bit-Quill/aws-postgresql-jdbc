name: 'Release Draft'

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  actions: write
  contents: write
  deployments: write
  packages: write
  pull-requests: write
  repository-projects: write

jobs:
  ubuntu-latest-build-and-release:
    name: 'Build and Release Driver'
    runs-on: ubuntu-latest
    steps:
    - name: 'Clone Repository'
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - name: 'Build Driver'
      uses: burrunan/gradle-cache-action@v1
      env:
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      with:
        job-id: jdk8
        arguments: --no-parallel --no-daemon jandex -x test assemble
    - name: 'Set Version Env Variable'
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: 'Get Release Details'
      run: |
        export RELEASE_DETAILS="$(awk -vN=2 'n<N;/^## /{++n}' CHANGELOG.md)"
        export RELEASE_DETAILS="$(sed '${/^# /d;}' <<< "$RELEASE_DETAILS")"
        export RELEASE_DETAILS="$(sed '$d' <<< "$RELEASE_DETAILS")"
        touch RELEASE_DETAILS.md
        echo "$RELEASE_DETAILS" > RELEASE_DETAILS.md
    - name: 'Install GPG Secret Key'
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
    - name: 'Trust GPG Key'
      run: |
        gpg --no-tty --command-fd 0 --edit-key ${{ steps.import_gpg.outputs.keyid }} << EOTRUST
        trust
        5
        y
        quit
        EOTRUST
    - name: 'Sign Jars'
      run: |
        export GPG_TTY=$(tty)
        KEYGRIP="$(gpg --with-keygrip -K | grep -Pom1 '^ *Keygrip += +\K.*')"
        /usr/lib/gnupg2/gpg-preset-passphrase -c $KEYGRIP <<< ${{ secrets.GPG_PASSPHRASE }}
        for jar in pgjdbc/build/libs/*.jar; do gpg --detach-sign --armor $jar; done
        for signed in pgjdbc/build/libs/*.asc; do gpg --verify $signed; done
    - name: 'Upload to Release'
      uses: ncipollo/release-action@v1
      with:
        draft: true
        name: "AWS JDBC Driver for PostgreSQL Public Preview - v${{ env.RELEASE_VERSION }}"
        bodyFile: RELEASE_DETAILS.md
        artifacts: pgjdbc/build/libs/*
        token: ${{ secrets.GITHUB_TOKEN }}
